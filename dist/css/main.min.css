@charset "UTF-8";@import url(https://fonts.googleapis.com/css2?family=Roboto&display=swap);@font-face{font-family:icons;font-display:swap;src:url(../fonts/icons.woff2) format("woff2"),url(../fonts/icons.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:gilroy-medium;font-display:swap;src:url(../fonts/gilroy-medium.woff2) format("woff2"),url(../fonts/gilroy-medium.woff) format("woff");font-weight:500;font-style:normal}@font-face{font-family:gilroy-semibold;font-display:swap;src:url(../fonts/gilroy-semibold.woff2) format("woff2"),url(../fonts/gilroy-semibold.woff) format("woff");font-weight:600;font-style:normal}@font-face{font-family:Pragmatica-Book;font-display:swap;src:url(../fonts/Pragmatica-Book.woff2) format("woff2"),url(../fonts/Pragmatica-Book.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:Pragmatica-Medium;font-display:swap;src:url(../fonts/Pragmatica-Medium.woff2) format("woff2"),url(../fonts/Pragmatica-Medium.woff) format("woff");font-weight:400;font-style:normal}[class*=_icon-]:before{font-family:"icons";font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block}._icon-arrow-left:before{content:"ðŸŒ¤"}._icon-arrow-right:before{content:"\e901"}._icon-slider-arrow-right:before{content:"\e902"}._icon-ok:before{content:"\e903"}._icon-slider-arrow-left:before{content:"\e904"}._icon-zoom:before{content:"\e905"}*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}body,html{height:100%;min-width:320px}body{font:1rem/1 gilroy-medium;color:#323340;-ms-text-size-adjust:100%;-moz-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;background:#e5e5e5}button,input,textarea{font:inherit gilroy-medium}button{background:inherit;cursor:pointer}a,button{color:inherit}a:hover,a:link,a:visited{text-decoration:none}ul li{list-style:none}img{vertical-align:top;max-width:100%;height:auto}h1,h2,h3,h4,h5,h6{font-weight:inherit;font-size:inherit}.lock body{overflow:hidden;-ms-touch-action:none;touch-action:none}.wrapper{min-height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;overflow:hidden}.wrapper>main{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.wrapper>*{min-width:0}[class*=__container]{max-width:77.5rem;-webkit-box-sizing:content-box;box-sizing:content-box;margin:0 auto;padding:0 .9375rem}[class*=-ibg]{position:relative}[class*=-ibg] img{position:absolute;width:100%;height:100%;top:0;left:0;-o-object-fit:cover;object-fit:cover}[class*=-ibg_contain] img{-o-object-fit:contain;object-fit:contain}.main{margin-top:5rem}.block-section-result,.main{position:relative}.block-section-result__title{margin-bottom:3rem;line-height:1.2666666667;text-align:center;font-size:1.875rem}.wrapper-result{display:-webkit-box;display:-ms-flexbox;display:flex;gap:1.25rem;margin-bottom:5.5rem}.wrapper-result::-webkit-scrollbar{height:1.3125rem}.wrapper-result::-webkit-scrollbar-thumb{background:#9d9ebf;height:.3125rem;border-top:.25rem solid #dadae8;border-bottom:.25rem solid #dadae8;border-radius:.5625rem}.wrapper-result::-webkit-scrollbar-track{background:#dadae8;border-radius:1.625rem;margin-left:6.25rem;margin-right:6.25rem}.item-result{background:#fff;-webkit-box-flex:0;-ms-flex:0 1 33.33%;flex:0 1 33.33%;border-radius:1.25rem;overflow:hidden}.item-result__image,.item-result__image-cover{-webkit-box-flex:1;-ms-flex:1 1 100%;flex:1 1 100%}.item-result__image{position:relative;margin-bottom:2.25rem;padding:2.5rem 2rem 0}.item-result__image-cover{background:#222265;width:100%;height:12.25rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;overflow:hidden;padding:.625rem 0}.item-result__image-cover img{padding:0 2.5rem 0 .625rem}.item-result .zoom{background:0 0;padding:.625rem;color:#fff;font-size:1.8125rem;position:absolute;bottom:.125rem;right:2.25rem}.info-result{position:relative;padding:0 2rem 3rem}.info-result__title{font:1.25rem/1.35 gilroy-medium;position:relative;margin-bottom:1.5rem}.info-result__number{position:absolute;top:-1.375rem;left:.9375rem}.info-result__number span{background:0 0;font-size:5rem;color:#dadae8;z-index:0;font-weight:600}.info-result__description{font:1rem/1.5 Pragmatica-Book}.arrow-next-top,.arrow-prev-top,.block-section-result__counter{display:none}.section-problems{margin-bottom:5rem}.block-section-problems__title{margin-bottom:3rem;line-height:1.2666666667;text-align:center;font-size:1.875rem}.block-section-problems__content{border-radius:1.25rem;overflow:hidden;display:block;height:auto}.wrapper-problems{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1 0 100%;flex:1 0 100%}.wrapper-problems__item{-ms-flex-preferred-size:50%;flex-basis:50%;padding:3rem 2.5rem 4rem 3rem}.item-problems{height:auto}.item-problems__ok{color:#222265;font-size:1.6875rem;margin-bottom:1.5rem}.item-problems__text{font:1rem/1.5 Pragmatica-Book}.block-section-problems__counter{display:none}.problems-arrow__prev{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.problems-arrow__next,.problems-arrow__prev{padding:.625rem;font-size:1.375rem}.counter-text{display:-webkit-box;display:-ms-flexbox;display:flex;margin:0 5.375rem}.problems-number__curr{margin-top:-3px;font-size:1.625rem}.problems-number__slash{font-size:1.625rem}.problems-number__next{font-size:1rem}.block-section-problems__counter-adaptive{display:none}.problems-arrow__prev-adaptive{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.problems-arrow__next-adaptive,.problems-arrow__prev-adaptive{padding:.625rem;font-size:1.375rem}.counter-text-adaptive{display:-webkit-box;display:-ms-flexbox;display:flex;margin:0 5.375rem}.problems-number{font-family:Pragmatica-Medium}.problems-number__curr-adaptive{margin-top:-3px;font-size:1.625rem}.problems-number__slash-adaptive{font-size:1.625rem}.problems-number__total-adaptive{font-size:1rem}.block-section-problems-adaptive__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;width:100%}.block-section-problems-adaptive__wrapper :nth-child(2){border-bottom:1px solid #dadae8;border-top:1px solid #dadae8}.wrapper-problems-adaptive{display:none}.item-problems-adaptive{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:left;-ms-flex-align:left;align-items:left;padding:2rem 2.125rem 2rem 1.5rem}.item-problems-adaptive :nth-child(2){border:0}.item-problems-adaptive__ok{color:#222265;font-size:1.4375rem;margin-right:1.25rem}.item-problems-adaptive__text{font:.9375rem/1.3333333333 Pragmatica-Book}.steps{position:relative}.section-problems{position:relative;width:100%;min-height:37.5rem}.section-steps{position:relative;-webkit-box-shadow:0 4px 4px rgba(0,0,0,.25);box-shadow:0 4px 4px rgba(0,0,0,.25)}.section-steps__container{height:auto}.block-section-steps{position:relative;height:100%}.block-section-steps__title{margin-bottom:3rem;line-height:1.2666666667;text-align:center;font-size:1.875rem;overflow:hidden}.tabs-steps{display:none}.wrapper-steps{display:grid;grid-template-columns:49% 49%;gap:1.25rem}.item-steps{background:#fff;position:relative;border-radius:1.25rem;overflow:hidden;margin:0 auto;padding:2rem 2.5rem 3.125rem 4rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%}.active-card{z-index:5}.left-steps__img{margin-bottom:1.25rem}.left-steps__title{margin-bottom:1.5rem;font-size:1.25rem;line-height:1.35}.left-steps__text{font:1rem/1.5 Pragmatica-Book}.right-steps{font-size:1.5625rem;line-height:1.36}.right-steps p{width:4.5625rem}.arrow-next,.arrow-prev{display:none}@media (max-width:61.99875em){.wrapper-result{overflow-x:scroll}.item-result{-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto;width:100%;max-width:25rem;margin-bottom:2.5rem}.item-result__image{padding:0}.item-result__image-cover{padding:0;border-radius:1.25rem;background-color:#dadae8}.item-result .zoom,.item-result__image-cover img{visibility:hidden}.wrapper-problems{-ms-flex-wrap:wrap;flex-wrap:wrap}.tabs-steps,.tabs-steps .tabs{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%}.tabs-steps{height:3.5625rem;position:relative;z-index:0}.tabs-steps .tabs{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;padding-top:1.375rem;padding-right:1.875rem;position:absolute;top:0;overflow:hidden;height:135%;color:#a0a0b1}.tabs-steps__item{background-color:#e6e8f3;max-width:20%;border-top-left-radius:1.25rem;border-top-right-radius:1.25rem;cursor:pointer;-webkit-box-shadow:0 .25rem .625rem rgba(0,0,0,.16);box-shadow:0 .25rem .625rem rgba(0,0,0,.16)}.tabs-steps__item-text{font-family:Pragmatica-Medium;font-size:1rem;line-height:1.25}.tabs-steps .active-tab{color:#000;z-index:8;background-color:#fff;padding-right:0;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.wrapper-steps{display:block;position:absolute;width:100%}.item-steps{position:absolute;padding:2rem 2.5rem 3.125rem 4rem;height:31.25rem;top:0;left:0}}@media (max-width:47.99875em){.block-section-problems__content{display:-webkit-box;display:-ms-flexbox;display:flex;height:40rem}.wrapper-problems{padding-bottom:0}.item-problems{height:20rem}.block-section-problems__counter{margin-top:1.375rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;color:#a0a0b1}}@media (max-width:35.99875em){.item-result{width:22.5rem}.info-result__description{font-size:.9375rem}.section-problems{margin-bottom:1.875rem}.block-section-problems__content{display:-webkit-box;display:-ms-flexbox;display:flex;height:auto}.wrapper-problems{display:none}.item-problems{height:auto}.block-section-problems__counter{display:none}.block-section-problems__counter-adaptive{margin-top:1.375rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;color:#a0a0b1}.wrapper-problems-adaptive{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1 0 100%;flex:1 0 100%;min-height:25rem}.tabs-steps{display:none}.wrapper-steps{grid-template-columns:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.item-steps,.item-steps__right,.left-steps__img{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.item-steps{background-color:#f5f6fb;position:static;-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;-webkit-box-flex:1;-ms-flex:1 0 100%;flex:1 0 100%;padding:0 0 2rem;height:100%;border-radius:0}.item-steps__right,.left-steps__img{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.item-steps__right{width:100%;padding-bottom:1.5rem;background-color:#e5e5e5}.left-steps__img{padding:0 1.5rem}.left-steps__text,.left-steps__title{padding:0 1.5rem}.arrow-prev{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:15rem;left:1rem;z-index:11}.arrow-prev__button{width:1.8125rem;height:1.8125rem;border-radius:50%;background-color:#fff;color:#555665}.arrow-prev__button p{margin:0 auto}.arrow-next{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:15rem;right:1rem;z-index:11}.arrow-next__button{width:1.8125rem;height:1.8125rem;border-radius:50%;background-color:#fff;color:#555665;padding:.625rem}.arrow-next__button p{margin:0 auto;margin-top:-.125rem}}@media (max-width:29.99875em){.block-section-result__title{font-size:1.625rem}.item-result{width:20rem}.info-result__title{font-size:1.125rem;margin-bottom:1.3125rem}.block-section-problems__title,.block-section-steps__title{font-size:1.625rem}}@media (max-width:23.43625em){.block-section-result__title{font-size:1.25rem;line-height:1.2727272727;margin-bottom:2rem}.wrapper-result{overflow-x:hidden;margin-bottom:0}.item-result{-ms-flex-preferred-size:100%;flex-basis:100%}.arrow-prev-top{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;position:absolute;top:9.0625rem;left:1rem}.arrow-prev-top__button{width:1.8125rem;height:1.8125rem;border-radius:50%;background-color:#fff;color:#555665;padding:.625rem}.arrow-next-top__button p,.arrow-prev-top__button p{margin:0 auto;margin-top:-.125rem}.arrow-next-top{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;text-align:center;vertical-align:middle;position:absolute;top:9.0625rem;right:1rem}.arrow-next-top__button{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg);width:1.8125rem;height:1.8125rem;border-radius:50%;background-color:#fff;color:#555665;padding:.625rem}.block-section-result__counter{margin-top:.5rem;margin-bottom:1.5rem;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;color:#a0a0b1}.block-section-result__counter,.block-section-result__counter .counter-text-top{display:-webkit-box;display:-ms-flexbox;display:flex}.block-section-result__counter .result-number{font-family:Pragmatica-Medium}.block-section-result__counter .result-number__curr{margin-top:-3px;font-size:1.625rem}.block-section-result__counter .result-number__slash{font-size:1.625rem}.block-section-result__counter .result-number__total{font-size:1rem}.block-section-problems__title,.block-section-steps__title{font-size:1.25rem;line-height:1.2727272727;margin-bottom:2rem}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */